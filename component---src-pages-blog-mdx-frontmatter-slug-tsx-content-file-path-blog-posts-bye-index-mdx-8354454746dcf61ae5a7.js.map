{"version":3,"file":"component---src-pages-blog-mdx-frontmatter-slug-tsx-content-file-path-blog-posts-bye-index-mdx-8354454746dcf61ae5a7.js","mappings":"gNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,MACFC,EAAAA,EAAAA,MAAsBN,EAAMO,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBP,EAAYG,GAAI,KAAM,gBAAiB,KAAMI,EAAAA,cAAoBP,EAAYI,EAAG,KAAM,oFAC7J,CAKA,MAJA,SAAoBL,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOS,QAASC,GAAaR,OAAOC,OAAO,CAAC,GAAGG,EAAAA,EAAAA,MAAsBN,EAAMO,YAC3E,OAAOG,EAAYF,EAAAA,cAAoBE,EAAWV,EAAOQ,EAAAA,cAAoBT,EAAmBC,IAAUD,EAAkBC,EAC9H,E,8BCRA,SAASW,EAASC,GAChB,IAAIC,EAAWC,EAAuBC,EAAwBC,EAAwBC,EAAYC,EAClG,IAAI,KAACC,EAAI,SAAEC,GAAYR,EACvB,MAAMS,GAAQC,EAAAA,EAAAA,GAAoC,QAA1BT,EAAYM,EAAKI,WAA+B,IAAdV,GAAoF,QAAnDC,EAAwBD,EAAUW,mBAAmD,IAA1BV,GAA6G,QAAhEC,EAAyBD,EAAsBW,mBAAoD,IAA3BV,GAAmH,QAArEC,EAAyBD,EAAuBW,uBAAwD,IAA3BV,OAArT,EAAkWA,EAAuBW,iBAC1c,OAAOnB,EAAAA,cAAoBoB,EAAAA,EAAQ,CACjCC,MAAO,IACNrB,EAAAA,cAAoBsB,EAAAA,EAAa,CAClCT,MAAOA,EACPU,IAAiC,QAA3Bd,EAAaE,EAAKI,WAAgC,IAAfN,GAAsF,QAApDC,EAAwBD,EAAWO,mBAAmD,IAA1BN,OAAtE,EAAkHA,EAAsBW,QACvMrB,EAAAA,cAAoB,MAAO,KAAMY,GACvC,CACe,SAASY,EAAiBhC,GACvC,OAAOQ,EAAAA,cAAoBG,EAAUX,EAAOQ,EAAAA,cAAoByB,EAAqBjC,GACvF,CACA,MACakC,EAAOC,IAClB,IAAIC,EAAYC,EAChB,IAAI,KAAClB,GAAQgB,EACb,OAAO3B,EAAAA,cAAoB8B,EAAAA,EAAK,CAC9BT,MAAmC,QAA3BO,EAAajB,EAAKI,WAAgC,IAAfa,GAAsF,QAApDC,EAAwBD,EAAWZ,mBAAmD,IAA1Ba,OAAtE,EAAkHA,EAAsBR,OAC3M,C,+EClBW,SAASS,EAAI,GAAoB,IAAD,QAAnB,MAACT,GAAiB,EAC1C,MAAMV,GAAOoB,EAAAA,EAAAA,IAAc,cAU3B,OACI/B,EAAAA,cAAAA,QAAAA,KAAQqB,EAAM,MAAa,QAAV,EAACV,EAAKqB,YAAI,OAAc,QAAd,EAATC,EAAWC,oBAAY,WAAd,EAATC,EAAyBd,MAEnD,C,sECYO,MAAMe,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBtC,GAC/B,MAAMuC,EAAoB,aAAiBF,GAG3C,OAAO,WAAc,IAEO,mBAAfrC,EACFA,EAAWuC,GAGb,IAAIA,KAAsBvC,IAChC,CAACuC,EAAmBvC,GACzB,C","sources":["webpack://dev-stickers/./blog-posts/bye/index.mdx","webpack://dev-stickers/./src/pages/blog/{mdx.frontmatter__slug}.tsx","webpack://dev-stickers/./src/components/Seo.tsx","webpack://dev-stickers/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"Bye everyone\"), \"\\n\", React.createElement(_components.p, null, \"See ya!\\r\\nI'm very happy to have you all here with me on this spacial location.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"C:/Users/20630/Downloads/nomad_24/gatsby101/dev-stickers/blog-posts/bye/index.mdx\";\nimport React from \"react\";\nimport Layout from \"../../components/Layout\";\nimport Seo from \"../../components/Seo\";\nimport {GatsbyImage, getImage} from \"gatsby-plugin-image\";\nfunction BlogPost(_ref) {\n  var _data$mdx, _data$mdx$frontmatter, _data$mdx$frontmatter2, _data$mdx$frontmatter3, _data$mdx2, _data$mdx2$frontmatte;\n  let {data, children} = _ref;\n  const image = getImage((_data$mdx = data.mdx) === null || _data$mdx === void 0 ? void 0 : (_data$mdx$frontmatter = _data$mdx.frontmatter) === null || _data$mdx$frontmatter === void 0 ? void 0 : (_data$mdx$frontmatter2 = _data$mdx$frontmatter.headerImage) === null || _data$mdx$frontmatter2 === void 0 ? void 0 : (_data$mdx$frontmatter3 = _data$mdx$frontmatter2.childImageSharp) === null || _data$mdx$frontmatter3 === void 0 ? void 0 : _data$mdx$frontmatter3.gatsbyImageData);\n  return React.createElement(Layout, {\n    title: \"\"\n  }, React.createElement(GatsbyImage, {\n    image: image,\n    alt: (_data$mdx2 = data.mdx) === null || _data$mdx2 === void 0 ? void 0 : (_data$mdx2$frontmatte = _data$mdx2.frontmatter) === null || _data$mdx2$frontmatte === void 0 ? void 0 : _data$mdx2$frontmatte.title\n  }), React.createElement(\"div\", null, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nconst query = \"3835272052\";\nexport const Head = _ref2 => {\n  var _data$mdx3, _data$mdx3$frontmatte;\n  let {data} = _ref2;\n  return React.createElement(Seo, {\n    title: (_data$mdx3 = data.mdx) === null || _data$mdx3 === void 0 ? void 0 : (_data$mdx3$frontmatte = _data$mdx3.frontmatter) === null || _data$mdx3$frontmatte === void 0 ? void 0 : _data$mdx3$frontmatte.title\n  });\n};\n","import { graphql, useStaticQuery } from \"gatsby\";\r\nimport React from \"react\"\r\n\r\ninterface ISeoProps{\r\n    title: string;\r\n}\r\n/* 사이트 내 데이터 넣는 법 useStaticQuery - loading 안봐도 됨 시간 단축 */\r\nexport default function Seo({title}: ISeoProps){\r\n    const data = useStaticQuery<Queries.SeoDataQuery>(graphql`\r\n        query SeoData {\r\n            site {\r\n                siteMetadata {\r\n                    title\r\n                }\r\n            }\r\n        }\r\n    `);\r\n    // console.log(data.site?.siteMetadata?.title);\r\n    return (\r\n        <title>{title} | {data.site?.siteMetadata?.title}</title>\r\n    )\r\n}","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","_provideComponents","components","React","wrapper","MDXLayout","BlogPost","_ref","_data$mdx","_data$mdx$frontmatter","_data$mdx$frontmatter2","_data$mdx$frontmatter3","_data$mdx2","_data$mdx2$frontmatte","data","children","image","getImage","mdx","frontmatter","headerImage","childImageSharp","gatsbyImageData","Layout","title","GatsbyImage","alt","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","Head","_ref2","_data$mdx3","_data$mdx3$frontmatte","Seo","useStaticQuery","site","_data$site","siteMetadata","_data$site$siteMetada","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}